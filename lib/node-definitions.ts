export const nodeDefinitions = [
  {
    type: "action",
    category: "processing",
    name: "API Call",
    description: "Executes an API request",
    inputs: [
      {
        key: "url",
        label: "URL",
        type: "string",
        placeholder: "https://api.example.com",
        value: "https://api.example.com",
      },
      {
        key: "headers",
        label: "Headers",
        type: "object",
        placeholder: "Authorization: Bearer token",
        value: { Authorization: "Bearer token" },
      },
      {
        key: "body",
        label: "Body",
        type: "object",
        placeholder: "{ message: 'Hello, AI!' }",
        value: { message: "Hello, AI!" },
      },
      { key: "method", label: "Method", type: "select", options: ["GET", "POST", "PUT", "DELETE"], value: "GET" },
    ],
    outputs: [
      { key: "response", label: "Response", type: "object" },
      { key: "status", label: "Status Code", type: "number" },
    ],
    meta: { apiKey: true, env: false },
  },
  {
    type: "input",
    category: "input",
    name: "Text Input",
    description: "Accepts text input from the user",
    inputs: [
      {
        key: "placeholder",
        label: "Placeholder",
        type: "string",
        placeholder: "Enter text...",
        value: "Enter text...",
      },
      { key: "label", label: "Label", type: "string", placeholder: "Input Label", value: "Input Label" },
      { key: "required", label: "Required", type: "boolean", value: false },
    ],
    outputs: [{ key: "value", label: "Value", type: "string" }],
    meta: { validation: false },
  },
  {
    type: "output",
    category: "output",
    name: "Text Output",
    description: "Displays text output to the user",
    inputs: [
      { key: "text", label: "Text", type: "string", placeholder: "Output text", value: "Output text" },
      { key: "format", label: "Format", type: "select", options: ["Plain", "Markdown", "HTML"], value: "Plain" },
    ],
    outputs: [],
    meta: { styling: true },
  },
  {
    type: "condition",
    category: "condition",
    name: "If Condition",
    description: "Evaluates a condition and routes accordingly",
    inputs: [
      { key: "condition", label: "Condition", type: "string", placeholder: "value > 10", value: "value > 10" },
      { key: "value", label: "Value", type: "string", placeholder: "Input value", value: "" },
    ],
    outputs: [
      { key: "true", label: "True", type: "boolean" },
      { key: "false", label: "False", type: "boolean" },
    ],
    meta: { advanced: false },
  },
  {
    type: "processing",
    category: "processing",
    name: "Text Processor",
    description: "Processes text using AI models (Gemini, GPT, etc.)",
    inputs: [
      { key: "text", label: "Input Text", type: "string", placeholder: "Text to process", value: "" },
      {
        key: "model",
        label: "AI Model",
        type: "select",
        options: ["gemini-2.0-flash", "GPT-4", "Claude"],
        value: "gemini-2.0-flash",
      },
      {
        key: "prompt",
        label: "System Prompt",
        type: "string",
        placeholder: "You are a helpful assistant",
        value: "You are a helpful assistant",
      },
    ],
    outputs: [
      { key: "result", label: "Processed Text", type: "string" },
      { key: "tokenUsage", label: "Token Usage", type: "object" },
    ],
    meta: { apiKey: true, streaming: true },
  },
  {
    type: "input",
    category: "input",
    name: "File Upload",
    description: "Accepts file uploads from the user",
    inputs: [
      {
        key: "accept",
        label: "Accepted Types",
        type: "string",
        placeholder: ".pdf,.docx,image/*",
        value: ".pdf,.docx,image/*",
      },
      { key: "maxSize", label: "Max Size (MB)", type: "number", placeholder: "5", value: 5 },
    ],
    outputs: [
      { key: "file", label: "File", type: "object" },
      { key: "content", label: "Content", type: "string" },
    ],
    meta: { multiple: false },
  },
  {
    type: "processing",
    category: "processing",
    name: "Data Transformer",
    description: "Transforms data from one format to another",
    inputs: [
      { key: "data", label: "Input Data", type: "object", placeholder: "{}", value: {} },
      {
        key: "transformation",
        label: "Transformation",
        type: "string",
        placeholder: "data.map(item => item.value)",
        value: "data.map(item => item.value)",
      },
    ],
    outputs: [{ key: "result", label: "Transformed Data", type: "object" }],
    meta: { sandbox: true },
  },
  {
    type: "output",
    category: "output",
    name: "Chart Output",
    description: "Displays data as a chart",
    inputs: [
      { key: "data", label: "Chart Data", type: "object", placeholder: "[]", value: [] },
      { key: "type", label: "Chart Type", type: "select", options: ["Bar", "Line", "Pie", "Scatter"], value: "Bar" },
      { key: "title", label: "Chart Title", type: "string", placeholder: "Chart Title", value: "Chart Title" },
    ],
    outputs: [],
    meta: { interactive: true },
  },
  {
    type: "condition",
    category: "condition",
    name: "Switch Case",
    description: "Routes based on multiple conditions",
    inputs: [
      { key: "value", label: "Input Value", type: "string", placeholder: "Value to evaluate", value: "" },
      {
        key: "cases",
        label: "Cases",
        type: "object",
        placeholder: "{case1: 'value1', case2: 'value2'}",
        value: { case1: "value1", case2: "value2" },
      },
    ],
    outputs: [
      { key: "case1", label: "Case 1", type: "boolean" },
      { key: "case2", label: "Case 2", type: "boolean" },
      { key: "default", label: "Default", type: "boolean" },
    ],
    meta: { dynamic: true },
  },
  {
    type: "input",
    category: "input",
    name: "Webhook Trigger",
    description: "Triggers flow on webhook call",
    inputs: [
      { key: "endpoint", label: "Endpoint", type: "string", placeholder: "/api/webhook", value: "/api/webhook" },
      { key: "method", label: "Method", type: "select", options: ["GET", "POST"], value: "POST" },
    ],
    outputs: [
      { key: "payload", label: "Payload", type: "object" },
      { key: "headers", label: "Headers", type: "object" },
    ],
    meta: { authentication: false },
  },
  // WhatsApp Input Node
  {
    type: "input",
    category: "input",
    name: "WhatsApp Input",
    description: "Receives messages from WhatsApp",
    inputs: [
      {
        key: "phoneNumberId",
        label: "Phone Number ID",
        type: "string",
        placeholder: "Your WhatsApp Business Phone Number ID",
        value: "",
      },
      {
        key: "webhookVerifyToken",
        label: "Webhook Verify Token",
        type: "string",
        placeholder: "Your custom verification token",
        value: "",
      },
    ],
    outputs: [
      { key: "message", label: "Message", type: "string" },
      { key: "sender", label: "Sender", type: "string" },
      { key: "metadata", label: "Metadata", type: "object" },
    ],
    meta: { whatsappApi: true },
  },
  // WhatsApp Output Node
  {
    type: "output",
    category: "output",
    name: "WhatsApp Output",
    description: "Sends messages to WhatsApp",
    inputs: [
      { key: "message", label: "Message", type: "string", placeholder: "Message to send", value: "" },
      { key: "recipient", label: "Recipient", type: "string", placeholder: "Recipient phone number", value: "" },
      {
        key: "phoneNumberId",
        label: "Phone Number ID",
        type: "string",
        placeholder: "Your WhatsApp Business Phone Number ID",
        value: "",
      },
      {
        key: "messageType",
        label: "Message Type",
        type: "select",
        options: ["Text", "Template", "Media"],
        value: "Text",
      },
      {
        key: "templateName",
        label: "Template Name",
        type: "string",
        placeholder: "Name of the template",
        value: "",
        description: "Only required for Template message type",
      },
    ],
    outputs: [
      { key: "status", label: "Status", type: "string" },
      { key: "messageId", label: "Message ID", type: "string" },
    ],
    meta: { whatsappApi: true },
  },
]

